name: üöÄ Release
on:
  push:
    tags:
      - 'v*.*.*'        # Matches v1.0.0, v1.0.0-rc1, v2.1.3-beta, etc.
      - '*.*.*'         # Matches 1.0.0, 1.0.0-rc1, etc. (without v prefix)

env:
  ADDON_PATH: project/addons/GDSchema

jobs:
  # Build for all platforms
  build:
    name: Build All Platforms
    uses: ./.github/workflows/build.yml

  # Package and create release
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to create releases
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get version from tag
        id: tag_name
        run: |
          # Remove 'refs/tags/' prefix and store the tag
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Building release for tag: $TAG"

      - name: Create bin directory
        run: mkdir -p ${{ env.ADDON_PATH }}/bin

      # Windows artifacts
      - name: Download Windows Debug artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-windows-template_debug-x86_64
          path: ${{ env.ADDON_PATH }}/bin/

      - name: Download Windows Release artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-windows-template_release-x86_64
          path: ${{ env.ADDON_PATH }}/bin/

      # Linux artifacts
      - name: Download Linux Debug artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-linux-template_debug-x86_64
          path: ${{ env.ADDON_PATH }}/bin/

      - name: Download Linux Release artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-linux-template_release-x86_64
          path: ${{ env.ADDON_PATH }}/bin/

      # macOS artifacts
      - name: Download macOS Debug artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-macos-template_debug-universal
          path: ${{ env.ADDON_PATH }}/bin/

      - name: Download macOS Release artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-macos-template_release-universal
          path: ${{ env.ADDON_PATH }}/bin/

      # Android artifacts
      - name: Download Android Debug (arm64) artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-android-template_debug-arm64
          path: ${{ env.ADDON_PATH }}/bin/

      - name: Download Android Release (arm64) artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-android-template_release-arm64
          path: ${{ env.ADDON_PATH }}/bin/

      - name: Download Android Debug (x86_64) artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-android-template_debug-x86_64
          path: ${{ env.ADDON_PATH }}/bin/

      - name: Download Android Release (x86_64) artifact
        uses: actions/download-artifact@v4
        with:
          name: gdschema-android-template_release-x86_64
          path: ${{ env.ADDON_PATH }}/bin/

      - name: List downloaded files
        run: |
          echo "Contents of bin directory:"
          ls -lah ${{ env.ADDON_PATH }}/bin/

      - name: Package addon
        run: |
          cd project
          zip -r ../GDSchema-${{ steps.tag_name.outputs.tag }}.zip addons/GDSchema/ \
            -x 'addons/GDSchema/*.gitignore' \
            -x 'addons/GDSchema/*.import' \
            -x 'addons/GDSchema/.DS_Store' \
            -x 'addons/GDSchema/__pycache__/*' \
            -x 'addons/GDSchema/*.pyc' \
            -x 'addons/GDSchema/*.md~' \
            -x 'addons/GDSchema/.git/*' \
            -x 'addons/GDSchema/bin/*.lib' \
            -x 'addons/GDSchema/bin/*.exp'

      - name: Create SHA256 checksum
        run: |
          sha256sum GDSchema-${{ steps.tag_name.outputs.tag }}.zip > GDSchema-${{ steps.tag_name.outputs.tag }}.zip.sha256

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: GDSchema ${{ steps.tag_name.outputs.tag }}
          draft: false
          prerelease: ${{ contains(steps.tag_name.outputs.tag, 'rc') || contains(steps.tag_name.outputs.tag, 'beta') || contains(steps.tag_name.outputs.tag, 'alpha') }}
          generate_release_notes: true
          files: |
            GDSchema-${{ steps.tag_name.outputs.tag }}.zip
            GDSchema-${{ steps.tag_name.outputs.tag }}.zip.sha256
          body: |
            ## What's Included
            - Windows (x86_64): Debug & Release
            - Linux (x86_64): Debug & Release
            - macOS (Universal): Debug & Release
            - Android (x86_64 and ARM64): Debug & Release

            ### ‚ö†Ô∏è macOS Users
            Prebuilt binaries are provided for macOS, but some macOS configurations (particularly on Apple Silicon with recent OS versions) may have security policies that prevent loading *any* unsigned GDExtensions. If you encounter loading errors:
            - Test with other GDExtensions (FMOD, LimboAI, etc.) to determine if this is system-wide
            - Consider building from source as an alternative
            - Check Apple's documentation on Gatekeeper and code signing requirements

            **This issue is not specific to GDSchema** and affects GDExtensions generally on certain macOS setups.

            ## Verify Download
            ```bash
            sha256sum -c GDSchema-${{ steps.tag_name.outputs.tag }}.zip.sha256
            ```

            [Documentation](https://github.com/${{ github.repository }}/blob/main/project/addons/GDSchema/README.md) | [Examples](https://github.com/${{ github.repository }}/tree/main/project/addons/GDSchema/examples)
